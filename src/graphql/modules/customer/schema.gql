# INPUTS
input CustomerDataInput {
  email: String!
}

input CustomerIdInput {
  id: ID!
}

input CustomerSignInInput {
  email: String!
  password: String!
}

input CustomerInput {
  email: String!
  firstname: String!
  lastname: String!
  telephone: String!
  cpf: String!
  password: String!
  date_of_birth: String!
  gender: Int!
}

input CustomerUpdateInput {
  email: String
  firstname: String
  lastname: String
  telephone: String
  cpf: String
  password: String
  date_of_birth: String
  gender: Int
}

input CustomerAddressInput {
  rua: String!
  bairro: String!
  cidade: String!
  CEP: String!
  estado: String!
  pais: String!
  defaultShipping: Boolean!
  defaultBilling: Boolean!
}

input CustomerAddressUpdateInput {
  rua: String
  bairro: String
  cidade: String
  CEP: String
  estado: String
  pais: String
  defaultShipping: Boolean
  defaultBilling: Boolean
}

input CustomerWishlist {
  sku: String!
  quantity: Int!
}

# BASE SCHEMAS
type Customer {
  id: ID!
  email: String!
  firstname: String!
  lastname: String!
  telephone: String!
  cpf: String!
  password: String!
  date_of_birth: String!
  gender: Int!
  address: [CustomerAddress!]!
  tokens: [CustomerTokens!]!
}

type CustomerAddress {
  id: ID
  userId: ID!
  email: String!
  rua: String!
  bairro: String!
  cidade: String!
  CEP: String!
  estado: String!
  pais: String!
  defaultShipping: Boolean!
  defaultBilling: Boolean!
}

type CustomerTokens {
  userId: ID!
  token: String!
}

type Wishlist {
  sku: String!
  quantity: Int!
}

# RETURNS
type CreatedCustomer {
  token: String!
  customer: Customer!
}

type CreatedCustomerAddress {
  token: String!
  customer: CustomerAddress!
}

type DeletedCustomer {
  delete: Boolean!
}

type CreatedTokenCustomer {
  token: String!
}

type CreatedWishlist {
  token: String!
  wishlist: [Wishlist!]!
}

type SignOutCustomer {
  signOut: Boolean!
}

# QUERIES / MUTATIONS

type Query {
  customerList: [Customer!]!
  customer: CreatedCustomer!
}

type Mutation {
  createCustomer(data: CustomerInput!): CreatedCustomer!
  createCustomerAddress(data: CustomerAddressInput!): CreatedCustomerAddress!
  updateCustomerAddress(data: CustomerAddressUpdateInput!): CreatedCustomerAddress!
  updateCustomer(data: CustomerUpdateInput!): CreatedCustomer!
  deleteCustomer(email: String!): DeletedCustomer!
  deleteCustomerAddress(ID: ID!): DeletedCustomer!
  signInCustomer(data: CustomerSignInInput!): CreatedTokenCustomer!
  signOutCustomer: SignOutCustomer!
  addProductsToWishlist(data: [CustomerWishlist!]!): CreatedWishlist!
}
