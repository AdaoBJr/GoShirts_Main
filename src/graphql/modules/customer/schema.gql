# INPUTS
input CustomerDataInput {
  email: String!
}

input CustomerIdInput {
  id: ID!
}

input CustomerSignInInput {
  email: String!
  password: String!
}

input CustomerInput {
  email: String!
  firstname: String!
  lastname: String!
  telephone: String!
  cpf: String!
  password: String!
  date_of_birth: String!
  gender: Int!
}

input CustomerUpdateInput {
  email: String
  firstname: String
  lastname: String
  telephone: String
  cpf: String
  password: String
  date_of_birth: String
  gender: Int
}

# RETURNS
type Customer {
  id: ID!
  email: String!
  firstname: String!
  lastname: String!
  telephone: String!
  cpf: String!
  password: String!
  date_of_birth: String!
  gender: Int!
  tokens: [CustomerTokens!]!
}

type CreatedCustomer {
  token: String!
  customer: Customer!
}

type DeletedCustomer {
  delete: Boolean!
}

type TokenCustomer {
  token: String!
}

type SignOutCustomer {
  signOut: Boolean!
}

type CustomerTokens {
  userId: ID!
  token: String!
}

# QUERIES / MUTATIONS

type Query {
  customerList: [Customer!]!
  customer: CreatedCustomer!
}

type Mutation {
  createCustomer(data: CustomerInput!): CreatedCustomer!
  updateCustomer(data: CustomerUpdateInput!): CreatedCustomer!
  deleteCustomer(email: String!): DeletedCustomer!
  signInCustomer(data: CustomerSignInInput!): TokenCustomer!
  signOutCustomer: SignOutCustomer!
}
